00500113 //addi x2, x0, 5          # x2 = 5                                  0         
00C00193 //addi x3, x0, 12         # x3 = 12                                 4         
FF718393 //addi x4, x2, -9         # x4 = (5 - 9) = -4                       8         
0023E233 //or x4, x3, x5           # x4 = (3 OR 5) = 7                       C         
0041F2B3 //and x5, x4, x3          # x5 = (12 AND 7) = 4                    10         
004282B3 //add x5, x5, x4          # x5 = 4 + 7 = 11                        14         
02728863 //beq x7, x7, end         # shouldn't be taken                     18         
0041A233 //slt x4, x3, x4          # x4 = (12 < 7) = 0                      1C         
00020463 //beq x4, x0, around      # should be taken                        20         
00000293 //addi x5, x0, 0          # shouldn't execute                      24         
0023A233 //slt x4, x3, x5          # x4 = (3 < 5) = 1                       28         
005203B3 //add x7, x4, x7          # x7 = (1 + 11) = 12                     2C         
402383B3 //sub x7, x7, x5          # x7 = (12 - 5) = 7                      30         
0471AA23 //sw x7, 96(x0)           # [96] = 7                               34         
06002103 //lw x2, 96(x0)           # x2 = [96] = 7                          38         
005104B3 //add x9, x2, x5          # x9 = (7 + 11) = 18                     3C         
008001EF //jal x3, end             # jump to end, x3 = 0x44                 40         
00100113 //addi x2, x0, 1          # shouldn't execute                      44         
00910133 //add x2, x2, x9          # x2 = (7 + 18) = 25                     48         
0221A023 //sw x2, 0x20(x3)         # [100] = 25                             4C         
00210063 //beq x2, x2, done        # infinite loop                          50         