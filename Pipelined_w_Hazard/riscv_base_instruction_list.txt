00000013 // addi x0, x0, 0
00100093 // addi x1, x0, 1
00200113 // addi x2, x0, 2
00300193 // addi x3, x0, 3
00400213 // addi x4, x0, 4
00500293 // addi x5, x0, 5
00600313 // addi x6, x0, 6
00700393 // addi x7, x0, 7
00800413 // addi x8, x0, 8
00900493 // addi x9, x0, 9
00A00513 // addi x10, x0, 10
00B00593 // addi x11, x0, 11
00C00613 // addi x12, x0, 12
00D00693 // addi x13, x0, 13
00E00713 // addi x14, x0, 14
00F00793 // addi x15, x0, 15
01000813 // addi x16, x0, 16
01100893 // addi x17, x0, 17
01200913 // addi x18, x0, 18
01300993 // addi x19, x0, 19
01400A13 // addi x20, x0, 20
01500A93 // addi x21, x0, 21
01600B13 // addi x22, x0, 22
01700B93 // addi x23, x0, 23
01800C13 // addi x24, x0, 24
01900C93 // addi x25, x0, 25
01A00D13 // addi x26, x0, 26
01B00D93 // addi x27, x0, 27
01C00E13 // addi x28, x0, 28
01D00E93 // addi x29, x0, 29
01E00F13 // addi x30, x0, 30
01F00F93 // addi x31, x0, 31
///////////////////////
0x00108093 addi x16, x16, 1 →
0x00107F93 addi x15, x15, 1 →
/////
0x01408293 // addi x10, x1, 20 
0xFCE18113 // addi x2, x3, -50 
0x01408293 // addi x10, x1, 20 
0xFCE18113 // addi x2, x3, -50 
0x01408293 // addi x10, x1, 20 
0xFCE18113 // addi x2, x3, -50 
0x01408293 // addi x10, x1, 20 
0xFCE18113 // addi x2, x3, -50 
0x01408293 // addi x10, x1, 20 
0xFCE18113 // addi x2, x3, -50 

///////////////////////
00000013 // ADDI x1, x0, 0
00000093 // ADDI x1, x0, 0
00000113 // ADDI x2, x0, 0
00000193 // ADDI x3, x0, 0
00000213 // ADDI x4, x0, 0
00000293 // ADDI x5, x0, 0
00000313 // ADDI x6, x0, 0
00000393 // ADDI x7, x0, 0
00000413 // ADDI x8, x0, 0
00000493 // ADDI x9, x0, 0
00000513 // ADDI x10, x0, 0
00000593 // ADDI x11, x0, 0
00000613 // ADDI x12, x0, 0
00000693 // ADDI x13, x0, 0
00000713 // ADDI x14, x0, 0
00000793 // ADDI x15, x0, 0
00000813 // ADDI x16, x0, 0
00000893 // ADDI x17, x0, 0
00000913 // ADDI x18, x0, 0
00000993 // ADDI x19, x0, 0
00000A13 // ADDI x20, x0, 0
00000A93 // ADDI x21, x0, 0
00000B13 // ADDI x22, x0, 0
00000B93 // ADDI x23, x0, 0
00000C13 // ADDI x24, x0, 0
00000C93 // ADDI x25, x0, 0
00000D13 // ADDI x26, x0, 0
00000D93 // ADDI x27, x0, 0
00000E13 // ADDI x28, x0, 0
00000E93 // ADDI x29, x0, 0
00000F13 // ADDI x30, x0, 0
00000F93 // ADDI x31, x0, 0

//////////////////
00210593   // andi x11, x2, 2
00310613   // andi x12, x3, 3
00410693   // andi x13, x4, 4
00510713   // andi x14, x5, 5
00610793   // andi x15, x6, 6
///////////////////////
00710813   // ori x16, x7, 7
00810893   // ori x17, x8, 8
00910913   // ori x18, x9, 9
00A10993   // ori x19, x10, 10
/////////////////////
or x7,  x7, x2    # x7 = (x7 OR x2)    0023E2B3
or x8,  x7, x2    # x8 = (x7 OR x2)    0023E3B3
or x9,  x7, x2    # x9 = (x7 OR x2)    0023E4B3
or x10, x7, x2    # x10 = (x7 OR x2)   0023E5B3
or x23, x4, x3    # x23 = (x4 OR x3)   00326BB3
or x24, x4, x3    # x24 = (x4 OR x3)   00326C33
or x25, x4, x3    # x25 = (x4 OR x3)   00326CB3
or x26, x4, x3    # x26 = (x4 OR x3)   00326D33
or x27, x4, x3    # x27 = (x4 OR x3)   00326DB3
or x28, x4, x3    # x28 = (x4 OR x3)   00326E33
or x29, x4, x3    # x29 = (x4 OR x3)   00326EB3
or x30, x4, x3    # x30 = (x4 OR x3)   00326F33
/////
0027E0B3 // or x1,  x15, x16
0027E133 // or x2,  x15, x16
0027E1B3 // or x3,  x15, x16
0027E233 // or x4,  x15, x16
0027E2B3 // or x5,  x15, x16
0027E333 // or x6,  x15, x16
0027E2B3 // or x7,  x15, x16
0027E3B3 // or x8,  x15, x16
0027E4B3 // or x9,  x15, x16
0027E5B3 // or x10, x15, x16

/////.
0023E033 // or x0, x7, x2
0023E0B3 // or x1, x7, x2
0023E133 // or x2, x7, x2
0023E1B3 // or x3, x7, x2
0023E233 // or x4, x7, x2
0023E2B3 // or x5, x7, x2
0023E333 // or x6, x7, x2

/////
0023E2B3 // or x7, x7, x2
0023E3B3 // or x8, x7, x2
0023E4B3 // or x9, x7, x2
0023E5B3 // or x10, x7, x2
00326BB3 // or x23, x4, x3
00326C33 // or x24, x4, x3
00326CB3 // or x25, x4, x3
00326D33 // or x26, x4, x3
00326DB3 // or x27, x4, x3
00326E33 // or x28, x4, x3
00326EB3 // or x29, x4, x3
00326F33 // or x30, x4, x3
/////
00500113 // addi x2, x0, 5
00C00193 // addi x3, x0, 12
FF718393 // addi x7, x3, -9
0023E3B3 // or x8, x7, x2  
0081F3B3 // and x8, x3, x8 
008282B3 // add x5, x5, x8 
/////
0x00327233 and x10, x4, x3
0x003272B3 and x11, x4, x3
0x00327333 and x12, x4, x3
0x003273B3 and x13, x4, x3
0x00327433 and x14, x4, x3
0x003274B3 and x15, x4, x3
0x00327533 and x16, x4, x3
0x003275B3 and x17, x4, x3
0x00327633 and x18, x4, x3
0x003276B3 and x19, x4, x3
0x00327733 and x20, x4, x3
///////
0x00F70A33 → add x21, x14, x15
0x00F70AB3 → add x22, x14, x15
0x00F70B33 → add x23, x14, x15
0x00F70BB3 → add x24, x14, x15
0x00F70CB3 → add x25, x14, x15
0x00F70D33 → add x26, x14, x15
0x00F70DB3 → add x27, x14, x15
0x00F70E33 → add x28, x14, x15
0x00F70EB3 → add x29, x14, x15
0x00F70F33 → add x30, x14, x15

//// Andan
00404823 // sw x4, 8(x0)
0064A423//  sw x6, 8(x9)  . The register file reads 0x2004 (the base address) from x9 and 10 from x6 while the Extendunit extends the immediate offset 8 from 12 to 32 bits.
0221A023 // SW,x7, 84(x3)
0471AA23 // sw x2, 20(x3)


///////////
00000000001000000010000000100011 0x00202023 SW x2,0 (x0)
00000000001000000010001000100011 0x00202223 SW x2,4 (x0)
00000000001000000010010000100011 0x00202423 SW x2,8 (x0)
00000000001000000010011000100011 0x00202623 SW x2,12 (x0)
00000000001000000010100000100011 0x00202823 SW x2,16 (x0)
00000000001000000010101000100011 0x00202A23 SW x2,20 (x0)
00000000001000000010110000100011 0x00202C23 SW x2,24 (x0)
00000000001000000010111000100011 0x00202E23 SW x2,28 (x0)
00000010001000000010000000100011 0x02202023 SW x2,32 (x0)
00000010001000000010001000100011 0x02202223 SW x2,36 (x0)
00000010001000000010010000100011 0x02202423 SW x2,40 (x0)
00000010001000000010011000100011 0x02202623 SW x2,44 (x0)
00000010001000000010100000100011 0x02202823 SW x2,48 (x0)
00000010001000000010101000100011 0x02202A23 SW x2,52 (x0)
00000010001000000010110000100011 0x02202C23 SW x2,56 (x0)
00000010001000000010111000100011 0x02202E23 SW x2,60 (x0)
//////
000000000000__00000_010_00001_0000011  //   00002083  // guardo el valor ram(0) en el registro 1  del rf
000000000100__00000_010_00010_0000011  //   00402103  // guardo el valor ram(4) en el registro 2  del rf
000000001000__00000_010_00011_0000011  //   00802183  // guardo el valor ram(8) en el registro 3  del rf
000000001100__00000_010_00100_0000011  //   00C02203  // guardo el valor ram(12) en el registro 4  del rf
000000010000__00000_010_00101_0000011  //   01002283  // guardo el valor ram(16) en el registro 5  del rf
000000010100__00000_010_00110_0000011  //   01402303  // guardo el valor ram(20) en el registro 6  del rf
000000011000__00000_010_00111_0000011  //   01802383  // guardo el valor ram(24) en el registro 7  del rf
000000011100__00000_010_01000_0000011  //   01C02403  // guardo el valor ram(28) en el registro 8  del rf
000000100000__00000_010_01001_0000011  //   02002483  // guardo el valor ram(32) en el registro 9  del rf
000000100100__00000_010_01010_0000011  //   02402503  // guardo el valor ram(36) en el registro 10  del rf
000000101000__00000_010_01011_0000011  //   02802583  // guardo el valor ram(40) en el registro 11  del rf
000000101100__00000_010_01100_0000011  //   02C02603  // guardo el valor ram(44) en el registro 12 del rf


 
 
 
 0  ->  000000
4  ->  000100
8  ->  001000
12 ->  001100
16 ->  010000
20 ->  010100
24 ->  011000
28 ->  011100
32 ->  100000
36 ->  100100
40 ->  101000
44 ->  101100
48 ->  110000
52 ->  110100
56 ->  111000
60 ->  111100